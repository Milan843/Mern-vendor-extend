{"ast":null,"code":"var _jsxFileName = \"/home/milan/mern-assign-extend/client/src/components/stepper2.jsx\";\nimport React, { Component } from \"react\";\nimport Product from \"./productName\";\nimport Item from \"./items\";\nimport Save from \"./saveProduct\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport '../components/css/index.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\"; //Stepper component where we are given 3 steps\n//first step is to select product\n//second step is to choice items\n//third step is to preview and save the product\n\nclass StepperForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"Select Product Name\",\n      step: 1,\n      formcontent: \"\",\n      selectedProductName: null,\n      selectedItems: []\n    };\n\n    this.selectProductName = async val => {\n      await this.setState({\n        selectedProductName: val,\n        selectedItems: []\n      });\n    };\n\n    this.selectItems = async val => {\n      if (this.state.selectedItems.includes(val)) {\n        let arr = [...this.state.selectedItems];\n        arr.pop(val);\n        await this.setState({\n          selectedItems: [...arr]\n        });\n      } else {\n        await this.setState({\n          selectedItems: [val, ...this.state.selectedItems]\n        });\n      }\n\n      console.log(this.state);\n    };\n\n    this.Increment = async () => {\n      await this.setState({\n        step: this.state.step + 1\n      });\n      this.onstatechange();\n    };\n\n    this.Decrement = async () => {\n      await this.setState({\n        step: this.state.step - 1\n      });\n      this.onstatechange();\n    };\n\n    this.onstatechange = () => {\n      switch (this.state.step) {\n        case 1:\n          this.setState({\n            formcontent: React.createElement(Product, {\n              productname: this.selectProductName,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }),\n            title: \"Select Product Name\"\n          });\n          break;\n\n        case 2:\n          this.setState({\n            formcontent: React.createElement(Item, {\n              selectedItems: this.selectItems,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }),\n            title: \"Select Items\"\n          });\n          break;\n\n        case 3:\n          this.setState({\n            formcontent: React.createElement(Save, {\n              product_id: this.state.selectedProductName,\n              Itemlist: this.state.selectedItems,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }),\n            title: \"Save\"\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.showbuttons = () => {\n      if (this.state.step === 1) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          gradient: \"aqua\",\n          rounded: true,\n          onClick: this.Increment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"next\"));\n      } else if (this.state.step === 3) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          gradient: \"blue\",\n          rounded: true,\n          onClick: this.Decrement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"prev\"));\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(MDBBtn, {\n          gradient: \"blue\",\n          rounded: true,\n          onClick: this.Decrement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"prev\"), React.createElement(MDBBtn, {\n          gradient: \"aqua\",\n          rounded: true,\n          onClick: this.Increment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"next\"));\n      }\n    };\n\n    this.stepperprogress = () => {\n      if (this.state.step == 1) {\n        return React.createElement(\"div\", {\n          className: \"stepperstep\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            background: \"orange\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"1\"), React.createElement(\"span\", {\n          style: {\n            background: \"grey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"2\"), React.createElement(\"span\", {\n          style: {\n            background: \"grey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"3\"));\n      } else if (this.state.step == 2) {\n        return React.createElement(\"div\", {\n          className: \"stepperstep\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            background: \"orange\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"1\"), React.createElement(\"span\", {\n          style: {\n            background: \"orange\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"2\"), React.createElement(\"span\", {\n          style: {\n            background: \"grey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"3\"));\n      } else if (this.state.step == 3) {\n        return React.createElement(\"div\", {\n          className: \"stepperstep\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            background: \"orange\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"1\"), React.createElement(\"span\", {\n          style: {\n            background: \"orange\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"2\"), React.createElement(\"span\", {\n          style: {\n            background: \"orange\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"3\"));\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await this.setState({\n      token: this.props.token\n    });\n    this.onstatechange();\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.stepperprogress(), React.createElement(\"div\", {\n      className: \"stepperform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"indigo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.title), this.state.formcontent, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), this.state.btn, this.showbuttons()), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default StepperForm;","map":{"version":3,"sources":["/home/milan/mern-assign-extend/client/src/components/stepper2.jsx"],"names":["React","Component","Product","Item","Save","MDBContainer","MDBRow","MDBCol","MDBBtn","StepperForm","state","title","step","formcontent","selectedProductName","selectedItems","selectProductName","val","setState","selectItems","includes","arr","pop","console","log","Increment","onstatechange","Decrement","showbuttons","stepperprogress","background","componentDidMount","token","props","render","btn"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Product from \"./productName\";\nimport Item from \"./items\";\nimport Save from \"./saveProduct\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport '../components/css/index.css';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from \"mdbreact\";\n\n//Stepper component where we are given 3 steps\n//first step is to select product\n//second step is to choice items\n//third step is to preview and save the product\nclass StepperForm extends Component {\n  state = {\n    title: \"Select Product Name\",\n    step: 1,\n    formcontent: \"\",\n    selectedProductName: null,\n    selectedItems: []\n  };\n  selectProductName = async val => {\n    await this.setState({ selectedProductName: val, selectedItems: [] });\n  };\n\n  selectItems = async val => {\n    if (this.state.selectedItems.includes(val)) {\n      let arr = [...this.state.selectedItems];\n      arr.pop(val);\n      await this.setState({ selectedItems: [...arr] });\n    } else {\n      await this.setState({\n        selectedItems: [val, ...this.state.selectedItems]\n      });\n    }\n    console.log(this.state);\n  };\n\n  Increment = async () => {\n    await this.setState({ step: this.state.step + 1 });\n    this.onstatechange();\n  };\n\n  Decrement = async () => {\n    await this.setState({ step: this.state.step - 1 });\n    this.onstatechange();\n  };\n\n  async componentDidMount() {\n    await this.setState({ token: this.props.token });\n    this.onstatechange();\n  }\n\n  onstatechange = () => {\n    switch (this.state.step) {\n      case 1:\n        this.setState({\n          formcontent: <Product productname={this.selectProductName} />,\n          title: \"Select Product Name\"\n        });\n        break;\n      case 2:\n        this.setState({\n          formcontent: <Item selectedItems={this.selectItems} />,\n          title:\"Select Items\"\n        });\n        break;\n      case 3:\n        this.setState({\n          formcontent: (\n            <Save\n            product_id={this.state.selectedProductName}\n            Itemlist={this.state.selectedItems}\n          />\n        ),\n        title:\"Save\"\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  showbuttons = () => {\n    if (this.state.step === 1) {\n      return (\n        <React.Fragment>\n          <MDBBtn gradient=\"aqua\" rounded onClick={this.Increment}>next</MDBBtn>\n        </React.Fragment>\n      );\n    } else if (this.state.step === 3) {\n      return (\n        <React.Fragment>\n          <MDBBtn gradient=\"blue\" rounded onClick={this.Decrement}>prev</MDBBtn>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <MDBBtn gradient=\"blue\" rounded onClick={this.Decrement}>prev</MDBBtn>\n          <MDBBtn gradient=\"aqua\" rounded onClick={this.Increment}>next</MDBBtn>\n        </React.Fragment>\n      );\n    }\n  };\n\n  stepperprogress=()=>{\n    if(this.state.step== 1){\n      return <div className=\"stepperstep\">\n        <span style={{background:\"orange\"}}>1</span>\n        <span style={{background:\"grey\"}}>2</span>\n        <span style={{background:\"grey\"}}>3</span>\n      </div>\n    }else if(this.state.step== 2){\n      return <div className=\"stepperstep\">\n      <span style={{background:\"orange\"}}>1</span>\n      <span style={{background:\"orange\"}}>2</span>\n      <span style={{background:\"grey\"}}>3</span>\n    </div>\n    }else if(this.state.step== 3){\n      return <div className=\"stepperstep\">\n      <span style={{background:\"orange\"}}>1</span>\n      <span style={{background:\"orange\"}}>2</span>\n      <span style={{background:\"orange\"}}>3</span>\n    </div>\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      {this.stepperprogress()}\n      <div className=\"stepperform\" >\n            <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"3\"></MDBCol>\n          <MDBCol md=\"6\">\n            <h2 className=\"indigo-text\">{this.state.title}</h2>\n            {this.state.formcontent}\n            <br />\n            {this.state.btn}\n            {this.showbuttons()}\n          </MDBCol>\n          <MDBCol md=\"3\"></MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StepperForm;"]},"metadata":{},"sourceType":"module"}